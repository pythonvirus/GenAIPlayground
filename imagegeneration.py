import base64
import io
import json
import logging
import boto3
from PIL import Image
from botocore.exceptions import ClientError

class ImageError(Exception): 
    "Custom exception for errors returned by SDXL" 
    def __init__(self, message): 
        self.message = message
    logger = logging.getLogger(__name__)
    logging.basicConfig(level=logging.INFO)

def generate_image(model_id, body): 
    """ Generate an image using SDXL 1.0 on demand. Args: model_id (str): The model ID to use. body (str) : 
    The request body to use. Returns: image_bytes (bytes): The image generated by the model. """ 

    logger.info("Generating image with SDXL model %s", model_id) 
    bedrock = boto3.client(service_name='bedrock-runtime') 
    accept = "application/json" 
    content_type = "application/json" 
    response = bedrock.invoke_model( body=body, modelId=model_id, accept=accept, contentType=content_type ) 
    response_body = json.loads(response.get("body").read()) 
    print(response_body['result'])

    base64_image = response_body.get("artifacts")[0].get("base64") 
    base64_bytes = base64_image.encode('ascii') 
    image_bytes = base64.b64decode(base64_bytes)

    finish_reason = response_body.get("artifacts")[0].get("finishReason")

    if finish_reason == 'ERROR' or finish_reason == 'CONTENT_FILTERED': 
        raise ImageError(f"Image generation error. Error code is {finish_reason}")